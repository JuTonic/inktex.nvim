local utils = require("inkscape-latex.utils")
local M = {}

--- @class InkscapeLatexOptionsInput
--- @field autostart? boolean
--- @field figures_dir? string
--- @field auto_create_figures_dir? boolean
--- @field inkscape_path? string
--- @field watcher_path? string
--- @field template_path? string
---
--- @class InkscapeLatexOptions : InkscapeLatexOptionsInput
--- @field autostart boolean
--- @field figures_dir string
--- @field auto_create_figures_dir boolean
--- @field inkscape_path string
--- @field watcher_path string
--- @field template_path string

local PLUGIN_ROOT = utils.get_plugin_root()
local DATA_DIR = utils.get_plugin_data_dir()

local WATCHER_NAME = "inkscape-texd"
local WATCHER_PATH = vim.fs.joinpath(PLUGIN_ROOT, "bin", WATCHER_NAME)
local function get_watcher_path()
    if vim.fn.filereadable(WATCHER_PATH) == 0 then
        vim.notify("Failed to find '" .. WATCHER_NAME .. "' binary: " .. WATCHER_PATH, vim.log.levels.ERROR)
        return
    end
    if vim.fn.executable(WATCHER_PATH) == 0 then
        vim.notify(WATCHER_PATH .. " is not executable", vim.log.levels.ERROR)
        return
    end

    return WATCHER_PATH
end

local function get_inkscape_path()
    local path = vim.fn.exepath("inkscape")

    if path == "" then
        vim.notify("Inkscape not found in $PATH.", vim.log.levels.ERROR)
        return
    end

    return path
end

local TEMPLATE_PATH = vim.fs.joinpath(DATA_DIR, "template.svg")
---@param inkscape string
local function get_template(inkscape)
    if not vim.fn.filereadable(TEMPLATE_PATH) then
        local output = vim.system({ inkscape, "--export-filename", TEMPLATE_PATH }):wait()
        if output.code ~= 0 then
            return
        end
    end

    return TEMPLATE_PATH
end

--- @type InkscapeLatexOptions
M.opts = {
    autostart = true,
    figures_dir = "figures",
    auto_create_figures_dir = true,
    inkscape_path = "",
    watcher_path = "",
    template_path = "",
}

--- @param opts? InkscapeLatexOptionsInput
--- @return boolean
function M.setup(opts)
    opts = opts or {}
    if not opts.watcher_path then
        local watcher_path = get_watcher_path()
        if not watcher_path then return false end
        M.opts.watcher_path = watcher_path
    end
    if not opts.inkscape_path then
        local inkscape_path = get_watcher_path()
        if not inkscape_path then return false end
        M.opts.inkscape_path = inkscape_path
    end
    if not opts.template_path then
        local template_path = get_watcher_path()
        if not template_path then return false end
        M.opts.template_path = template_path
    end

    M.opts = vim.tbl_deep_extend(
        "force",
        M.opts,
        opts
    )

    utils.opts = M.opts

    return true
end

return M
